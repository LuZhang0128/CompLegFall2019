members <- select(members, first, last, party)
# name
members$name <- str_c(members$first, " ", members$last)
# drop duplicates
members$duplicate <- duplicated(members$name)
members <- filter(members, !duplicate)
members$duplicate <- NULL
# clean workspace
rm(m1, m2, m3, m4)
# debates
debates$member <- as.numeric(debates$person %in% members$name)
# select speeches
speeches <- filter(debates, member == 1 & (debate == 1 | question == 1))
# select variables
speeches <- select(speeches, person, parliament, session, text)
# parliament and session
speeches$group <- as.numeric(str_c(speeches$parliament, ".", speeches$session))
# rename variables
names(speeches) <- c("name", "parliament", "session", "text", "group")
# drop 38.1 and 40.1
speeches <- filter(speeches, !(group %in% c(38.1, 40.1)))
# collapse
speeches1 <- speeches %>% group_by(name) %>% summarize(text = str_c(text, collapse = " "))
# merge
speeches1 <- left_join(speeches1, members, by = "name")
# filter
speeches1 <- filter(speeches1, party %in% c("Liberal", "Conservative", "NDP"))
# collapse
speeches2 <- speeches %>% group_by(name, group) %>% summarize(text = str_c(text, collapse = " "))
# merge
speeches2 <- left_join(speeches2, members, by = "name")
# ID
speeches2$name <- str_c(speeches2$name, " (", speeches2$group, ")")
# filter
speeches2 <- filter(speeches2, party %in% c("Liberal", "Conservative", "NDP"))
# make a corpus
corpus1 <- corpus(speeches1$text, docnames = speeches1$name)
corpus2 <- corpus(speeches2$text, docnames = speeches2$name)
# make a DTM
dtm1 <- dfm(corpus1)
dtm2 <- dfm(corpus2)
# remove stop words
dtm1 <- dfm_remove(dtm1, stopwords("english"))
dtm2 <- dfm_remove(dtm2, stopwords("english"))
# stem words
dtm1 <- dfm_wordstem(dtm1, language = "english")
dtm2 <- dfm_wordstem(dtm2, language = "english")
# remove rare words
dtm1.trim <- dfm_trim(dtm1, min_docfreq = 10)
dtm2.trim <- dfm_trim(dtm2, min_docfreq = 10)
# check dimensions
dim(dtm1.trim)
dim(dtm2.trim)
# estimate wordfish model
wordfish1 <- textmodel_wordfish(dtm1.trim, dir = c(1, 2))
wordfish2 <- textmodel_wordfish(dtm2.trim, dir = c(1, 2))
# plot data
out1 <- data.frame(position = -wordfish1$theta, name = rownames(dtm1.trim), stringsAsFactors = FALSE)
out2 <- data.frame(position = -wordfish2$theta, name = rownames(dtm2.trim), stringsAsFactors = FALSE)
# parliament
out2$parliament <- str_extract(out2$name, "\\(.*?\\)")
out2$parliament <- as.numeric(str_extract(out2$parliament, "[0-9.]+"))
out2$parliament <- factor(out2$parliament, levels = c(39.1, 39.2, 40.2, 40.3, 41.1, 41.2),
labels = c("39th Parliament,\nSession 1",
"39th Parliament,\nSession 2",
"40th Parliament,\nSession 2",
"40th Parliament,\nSession 3",
"41st Parliament,\nSession 1",
"41st Parliament,\nSession 2"))
# fix name
out2$name <- str_replace(out2$name, " \\(.*", "")
# merge
out1 <- left_join(out1, members, by = "name")
out2 <- left_join(out2, members, by = "name")
# order MPs
out1$name <- factor(out1$name, levels = out1$name[order(out1$position)])
plot <- ggplot(out1) +
geom_line(aes(position, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
# make a corpus
corpus1 <- corpus(speeches1$text, docnames = speeches1$name, docvars = s)
# debates
debates$member <- as.numeric(debates$person %in% members$name)
# select speeches
speeches <- filter(debates, member == 1 & (debate == 1 | question == 1))
names(speeches)
# select variables
speeches <- select(speeches, person, parliament, session, text)
names(members)
# merge
speeches <- left_join(speeches, members, by = c("person" = "name"))
# make a corpus
corpus <- corpus(speeches$text, docnames = speeches$name, docvars = filter(speeches, -text))
# make a corpus
corpus <- corpus(speeches$text, docnames = speeches$name, docvars = select(speeches, -text))
# make a DTM
dtm <- dfm(corpus)
# remove stop words
dtm <- dfm_remove(dtm, stopwords("english"))
# stem words
dtm <- dfm_wordstem(dtm, language = "english")
# remove rare words
dtm.trim <- dfm_trim(dtm, min_docfreq = 10)
# check dimensions
dim(dtm.trim)
dim(dtm.trim)
# check dimensions
dim(dtm.trim)
# remove rare words
dtm.trim <- dfm_trim(dtm, min_docfreq = 15)
# check dimensions
dim(dtm.trim)
# debates
debates$member <- as.numeric(debates$person %in% members$name)
# select speeches
speeches <- filter(debates, member == 1 & (debate == 1 | question == 1))
# collapse speeches
speeches <- speeches %>% group_by(name) %>% summarize(text = str_c(text, collapse = " "))
names(speeches)
# select members
debates$member <- as.numeric(debates$person %in% members$name)
# select speeches
speeches <- filter(debates, member == 1 & (debate == 1 | question == 1))
# collapse speeches
speeches <- speeches %>% group_by(person) %>% summarize(text = str_c(text, collapse = " "))
names(speeches)
# merge
speeches <- left_join(speeches, members, by = c("person" = "name"))
names(speeches)
# make a corpus
corpus <- corpus(speeches$text, docnames = speeches$name, docvars = select(speeches, last, party))
# make a corpus
corpus <- corpus(speeches$text, docnames = speeches$person, docvars = select(speeches, person, last, party))
# make a DTM
dtm <- dfm(corpus)
# select members
debates$member <- as.numeric(debates$person %in% members$name)
# select speeches
speeches <- filter(debates, member == 1 & (debate == 1 | question == 1))
# collapse speeches
speeches <- speeches %>% group_by(person) %>% summarize(text = str_c(text, collapse = " "))
# merge
speeches <- left_join(speeches, members, by = c("person" = "name"))
# filter
speeches <- filter(speeches, party %in% c("Liberal", "Conservative", "NDP"))
# make a corpus
corpus <- corpus(speeches$text, docnames = speeches$person, docvars = select(speeches, person, last, party))
# make a DTM
dtm <- dfm(corpus)
# remove stop words
dtm <- dfm_remove(dtm, stopwords("english"))
# stem words
dtm <- dfm_wordstem(dtm, language = "english")
# remove rare words
dtm.trim <- dfm_trim(dtm, min_docfreq = 10)
# check dimensions
dim(dtm.trim)
# remove rare words
dtm.trim <- dfm_trim(dtm, min_docfreq = 20)
# check dimensions
dim(dtm.trim)
# convert
speeches.stm <- convert(dtm, to = "stm")
# run STM model
fit.stm <- stm(docuemnts = speeches.stm$documents, vocab = speeches.stm$vocab, K = 2, seed = 37483, data = speeches.stm$meta, sigma.prior = 0.1)
# run STM model
fit.stm <- stm(documents = speeches.stm$documents, vocab = speeches.stm$vocab, K = 2, seed = 37483, data = speeches.stm$meta, sigma.prior = 0.1)
summary(fit.stm)
# remove rare words
dtm.trim <- dfm_trim(dtm, min_docfreq = 20)
# check dimensions
dim(dtm.trim)
# remove rare words
dtm.trim <- dfm_trim(dtm, min_docfreq = 40)
# check dimensions
dim(dtm.trim)
# remove rare words
dtm.trim <- dfm_trim(dtm, min_docfreq = 50)
# check dimensions
dim(dtm.trim)
# convert
speeches.stm <- convert(dtm, to = "stm")
# run STM model
fit.stm <- stm(documents = speeches.stm$documents, vocab = speeches.stm$vocab, K = 2, seed = 37483, data = speeches.stm$meta, sigma.prior = 0.1)
summary(fit.stm)
# convert
speeches.stm <- convert(dtm.trim, to = "stm")
# run STM model
fit.stm <- stm(documents = speeches.stm$documents, vocab = speeches.stm$vocab, K = 2, seed = 37483, data = speeches.stm$meta, sigma.prior = 0.1)
labelTopics(fit.stm, n = 10)
cloud(fit.stm, topic = 1)
cloud(fit.stm, topic = 2)
# check dimensions
dim(dtm.trim)
# run STM model
fit.stm <- stm(documents = speeches.stm$documents, vocab = speeches.stm$vocab, K = 5, seed = 17485, data = speeches.stm$meta, sigma.prior = 0.1)
labelTopics(fit.stm, n = 10)
cloud(fit.stm, topic = 1)
# run STM model
fit.stm <- stm(documents = speeches.stm$documents, vocab = speeches.stm$vocab, K = 2, seed = 17485, data = speeches.stm$meta, prevalence = ~ factor(party), sigma.prior = 0.1)
labelTopics(fit.stm, n = 10)
theta <- fit.stm$theta
theta[,1]
plot.dat <- data.frame(name = speeches$person, party = speeches$party, theta1 = theta[,1], theta2 = theta[,2])
plot <- ggplot(plot.dat) +
geom_line(aes(theta1, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
plot <- ggplot(plot.dat) +
geom_line(aes(theta1 - theta2, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
plot <- ggplot(plot.dat) +
geom_line(aes(theta1 + theta2, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
plot <- ggplot(plot.dat) +
geom_line(aes(theta2 - theta1, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
fit.stm <- stm(documents = speeches.stm$documents, vocab = speeches.stm$vocab, K = 2, seed = 17485, data = speeches.stm$meta, sigma.prior = 0.1)
plot.dat <- data.frame(name = speeches$person, party = speeches$party, position = fit.stm$theta[,1] - fit.stm$theta[,2])
plot <- ggplot(plot.dat) +
geom_line(aes(position, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
plot <- ggplot(plot.dat) +
geom_line(aes(-position, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
# run STM model
fit.stm <- stm(documents = speeches.stm$documents, vocab = speeches.stm$vocab, K = 2, seed = 17485, data = speeches.stm$meta, prevalence = ~ factor(party), sigma.prior = 0.1)
plot <- ggplot(plot.dat) +
geom_line(aes(-position, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
fit.stm$mu
plot.dat <- data.frame(name = speeches$person, party = speeches$party, position = fit.stm$theta[,1] - fit.stm$theta[,2], mu = fit.stm$mu$mu)
plot <- ggplot(plot.dat) +
geom_line(aes(-mu, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
plot.dat <- data.frame(name = speeches$person, party = speeches$party, position = fit.stm$theta[,1] - fit.stm$theta[,2], mu = fit.stm$mu$mu)
plot <- ggplot(plot.dat) +
geom_line(aes(-mu, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
plot.dat <- data.frame(name = speeches$person, party = speeches$party, position = fit.stm$theta[,1] - fit.stm$theta[,2], mu = fit.stm$mu$mu)
plot.dat <- data.frame(name = speeches$person, party = speeches$party, position = fit.stm$theta[,1] - fit.stm$theta[,2], mu = as.numeric(fit.stm$mu$mu))
plot <- ggplot(plot.dat) +
geom_line(aes(-mu, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
fit.stm$mu$gamma
plot <- ggplot(plot.dat) +
geom_line(aes(position, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
fit.stm$mu$gamma
fit.stm <- stm(documents = speeches.stm$documents, vocab = speeches.stm$vocab, K = 3, seed = 17485, data = speeches.stm$meta, sigma.prior = 0.1)
plot.dat <- data.frame(name = speeches$person, party = speeches$party, theta1 = fit.stm$theta[,1], theta2 = fit.stm$theta[,2], theta3 = fit.stm$theta[,3])
plot <- ggplot(plot.dat) +
geom_line(aes(theta1, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
plot <- ggplot(plot.dat) +
geom_line(aes(theta2, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
plot <- ggplot(plot.dat) +
geom_line(aes(theta3, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
labelTopics(fit.stm, topics = 2)
labelTopics(fit.stm, topics = 2, n = 20)
plot.dat <- data.frame(name = speeches$person, party = speeches$party, position = fit.stm$theta[,1] - fit.stm$theta[,2])
fit.stm <- stm(documents = speeches.stm$documents, vocab = speeches.stm$vocab, K = 2, seed = 13857, data = speeches.stm$meta, sigma.prior = 0.1)
plot.dat <- data.frame(name = speeches$person, party = speeches$party, position = fit.stm$theta[,1] - fit.stm$theta[,2])
plot <- ggplot(plot.dat) +
geom_line(aes(theta3, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
plot <- ggplot(plot.dat) +
geom_line(aes(position, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
plot <- ggplot(plot.dat) +
geom_line(aes(-position, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
plot <- ggplot(plot.dat) +
geom_line(aes(-position, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
fit.stm$mu$gamma
labelTopics(fit.stm, topics = 2, n = 20)
labelTopics(fit.stm, topics = 1, n = 20)
plot.dat <- data.frame(name = speeches$person, party = speeches$party, position = fit.stm$theta[,1] - fit.stm$theta[,2], theta1 = fit.stm$theta[,1], theta2 = fit.stm$theta[,2])
plot <- ggplot(plot.dat) +
geom_line(aes(theta1, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
labelTopics(fit.stm, topics = 1, n = 20)
plot <- ggplot(plot.dat) +
geom_line(aes(theta2, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
fit.stm$mu$gamma
labelTopics(fit.stm, topics = 2, n = 20)
plot <- ggplot(plot.dat) +
geom_line(aes(-position, color = party, fill = party), stat = "density", size = 0.75) +
geom_vline(xintercept = 0, linetype = "dashed") +
scale_color_discrete(name = NULL) +
xlab("Position\n(Liberal-Conservative)") +
ylab(NULL) +
my_theme() +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
panel.border = element_blank(),
strip.background = element_blank())
plot
