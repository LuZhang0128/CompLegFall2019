x <- count(first_name=="Chair")
View(x)
x <- which(first_name=="Chair")
y <- which(first_name=="Vice-Chair")
y
y <- which(first_name=="Vice-Chairs")
z <- which(first_name=="Members")
setwd('~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Committees/Membership')
file <- "CHPC_38_1_2005-10-20.html"
# get some information from the name of the file
info <- str_split(file, "_|\\.")
info <- unlist(info)
# read html
html <- read_html(file)
# full_name, last_name, first_name
raw <- html %>%
html_nodes(".title,.first-name") %>%
html_text()
x <- which(raw=="Chair")
y <- which(raw=="Vice-Chairs")
z <- which(raw=="Members")
first_name <- raw[!x]
first_name <- raw[-c(x,y,z)]
first_name <- raw[-c(x,y,z)][c(TRUE,FALSE)]
as.data.frame(raw)
raw$
first_name <- raw[-c(x,y,z)][c(TRUE,FALSE)]
View(raw)
raw$title <- NA
setwd('~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Committees/Membership')
file <- "CHPC_38_1_2005-10-20.html"
# get some information from the name of the file
info <- str_split(file, "_|\\.")
info <- unlist(info)
# read html
html <- read_html(file)
# full_name, last_name, first_name
raw <- html %>%
html_nodes(".title,.first-name") %>%
html_text()
x <- which(raw=="Chair")
y <- which(raw=="Vice-Chairs")
z <- which(raw=="Members")
as.data.frame(raw)
raw$title <- NA
first_name <- raw[-c(x,y,z)][c(TRUE,FALSE)]
View(first_name)
c(x:y)
setwd('~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Committees/Membership')
file <- "CHPC_38_1_2005-10-20.html"
# get some information from the name of the file
info <- str_split(file, "_|\\.")
info <- unlist(info)
# read html
html <- read_html(file)
# full_name, last_name, first_name
raw <- html %>%
html_nodes(".title,.first-name") %>%
html_text()
x <- which(raw=="Chair")
y <- which(raw=="Vice-Chairs")
z <- which(raw=="Members")
View(raw)
title[c(x:y-1)] <- "Chair"
title <- "Initiate"
title[c(x:y-1)] <- "Chair"
k <- length(raw)
title <- "Initiate"
title[c(x:y-1)] <- "Chair"
title[c(y:z-1)] <- "Co-chair"
title[c(z:k)] <- "Member"
setwd('~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Committees/Membership')
file <- "CHPC_38_1_2005-10-20.html"
# get some information from the name of the file
info <- str_split(file, "_|\\.")
info <- unlist(info)
# read html
html <- read_html(file)
# full_name, last_name, first_name
raw <- html %>%
html_nodes(".title,.first-name") %>%
html_text()
View(raw)
x <- which(raw=="Chair")
y <- which(raw=="Vice-Chairs")
z <- which(raw=="Members")
k <- length(raw)
title <- "Initiate"
title[c(x:y-1)] <- "Chair"
title[c(y:z-1)] <- "Co-chair"
title[c(z:k)] <- "Member"
View(title)
title[c(x:y)] <- "Chair"
title[c(x:y-1)] <- "Chair"
title[c(y:z-1)] <- "Co-chair"
title[c(x :y-1)] <- "Chair"
title[c(y :z-1)] <- "Co-chair"
title[c(y:(z-1))] <- "Co-chair"
setwd('~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Committees/Membership')
file <- "CHPC_38_1_2005-10-20.html"
# get some information from the name of the file
info <- str_split(file, "_|\\.")
info <- unlist(info)
# read html
html <- read_html(file)
# full_name, last_name, first_name
raw <- html %>%
html_nodes(".title,.first-name") %>%
html_text()
View(raw)
x <- which(raw=="Chair")
y <- which(raw=="Vice-Chairs")
z <- which(raw=="Members")
k <- length(raw)
title <- "Initiate"
title[c(x:(y-1))] <- "Chair"
title[c(y:(z-1))] <- "Co-chair"
title[c(z:k)] <- "Member"
setwd('~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Committees/Membership')
file <- "CHPC_38_1_2005-10-20.html"
# get some information from the name of the file
info <- str_split(file, "_|\\.")
info <- unlist(info)
# read html
html <- read_html(file)
# full_name, last_name, first_name
raw <- html %>%
html_nodes(".title,.first-name") %>%
html_text()
x <- which(raw=="Chair")
y <- which(raw=="Vice-Chairs")
z <- which(raw=="Members")
k <- length(raw)
title <- "Initiate"
title[c(x:(y-1))] <- "Chair"
title[c(y:(z-1))] <- "Co-chair"
title[c(z:k)] <- "Member"
first_name <- raw[-c(x,y,z)][c(TRUE,FALSE)]
title <- title[-c(x,y,z)][c(TRUE,FALSE)]
last_name <- html %>%
html_nodes(".last-name") %>%
html_text()
last_name <- last_name[c(TRUE,FALSE)]
full_name <- paste(first_name, last_name, sep=" ") %>%
unique()
out <- data.frame(committee_acronym = info[1],
parliament_number = info[2],
session_number = info[3],
date_change = info[4],
title = title,
first_name = first_name,
last_name = last_name,
full_name = full_name,)
View(out)
#######################
# load libraries
#######################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
lapply(c("stringr", "dplyr", "plyr", "tidyverse", "rvest", "zoo"), pkgTest)
setwd('~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Committees/Membership')
file <- "CHPC_38_1_2005-10-20.html"
# get some information from the name of the file
info <- str_split(file, "_|\\.")
info <- unlist(info)
# read html
html <- read_html(file)
# full_name, last_name, first_name
raw <- html %>%
html_nodes(".title,.first-name") %>%
html_text()
x <- which(raw=="Chair")
y <- which(raw=="Vice-Chairs")
z <- which(raw=="Members")
k <- length(raw)
title <- "Initiate"
title[c(x:(y-1))] <- "Chair"
title[c(y:(z-1))] <- "Co-chair"
title[c(z:k)] <- "Member"
first_name <- raw[-c(x,y,z)][c(TRUE,FALSE)]
title <- title[-c(x,y,z)][c(TRUE,FALSE)]
last_name <- html %>%
html_nodes(".last-name") %>%
html_text()
last_name <- last_name[c(TRUE,FALSE)]
full_name <- paste(first_name, last_name, sep=" ") %>%
unique()
#######################
# load libraries
#######################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
lapply(c("stringr", "dplyr", "plyr", "tidyverse", "rvest", "zoo"), pkgTest)
########################
# read in data useful
########################
# set working directory
setwd('~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Committees')
df <- read.csv("canada_committees_date_change.csv")
###################################
# read in useful data in iteration
###################################
# change the date to the one in url
df$date_change <- gsub(",","",df$date_change)
df$dc <- as.Date(df$date_change, format="%B %d %Y")
x <- nrow(df)
# download through iteration
setwd('~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Committees/Membership')
dc <- df$dc
acronym <- df$committee_acronym
pn <- df$parliament_number
sn <- df$session_number
number <- paste("/Members?parl=",pn,"&session=",sn,"&membershipOn=", sep="")
for(i in 1:x){
url <- paste("https://www.ourcommons.ca/Committees/en/", acronym[i], dc[i], "#committeeMembersPanel", sep="")
file <- paste(acronym[i], "_", pn[i], "_", sn[i], "_", dc[i], ".html", sep="")
#download.file(url, file, quiet = TRUE)
}
#######################
# parse HTML function
#######################
parse_HTML <- function(file) {
# get some information from the name of the file
info <- str_split(file, "_|\\.")
info <- unlist(info)
# read html
html <- read_html(file)
# full_name, last_name, first_name
raw <- html %>%
html_nodes(".title,.first-name") %>%
html_text()
x <- which(raw=="Chair")
y <- which(raw=="Vice-Chairs")
z <- which(raw=="Members")
k <- length(raw)
title <- "Initiate"
title[c(x:(y-1))] <- "Chair"
title[c(y:(z-1))] <- "Co-chair"
title[c(z:k)] <- "Member"
first_name <- raw[-c(x,y,z)][c(TRUE,FALSE)]
title <- title[-c(x,y,z)][c(TRUE,FALSE)]
last_name <- html %>%
html_nodes(".last-name") %>%
html_text()
last_name <- last_name[c(TRUE,FALSE)]
full_name <- paste(first_name, last_name, sep=" ") %>%
unique()
# check
if(length(full_name) == 0) {
return(NULL)
}
# return the dataframe
out <- data.frame(committee_acronym = info[3],
parliament_number = info[4],
session_number = info[5],
date_change = info[6],
first_name = first_name,
last_name = last_name,
full_name = full_name)
return(out)
}
#####################
# read in data
#####################
setwd('~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Committees/Membership')
# file names
files <- list.files(pattern="*.html", full.names=TRUE, recursive=FALSE)
# parse XML
out <- alply(.data = files, .margins = 1, .fun = parse_HTML, .progress = "text", .inform = TRUE)
# stack data frames
df <- do.call("rbind", out)
###########
# clean
###########
View(df)
#######################
# load libraries
#######################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
lapply(c("stringr", "dplyr", "plyr", "tidyverse", "rvest", "zoo"), pkgTest)
########################
# read in data useful
########################
# set working directory
setwd('~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Committees')
df <- read.csv("canada_committees_date_change.csv")
###################################
# read in useful data in iteration
###################################
# change the date to the one in url
df$date_change <- gsub(",","",df$date_change)
df$dc <- as.Date(df$date_change, format="%B %d %Y")
x <- nrow(df)
# download through iteration
setwd('~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Committees/Membership')
dc <- df$dc
acronym <- df$committee_acronym
pn <- df$parliament_number
sn <- df$session_number
number <- paste("/Members?parl=",pn,"&session=",sn,"&membershipOn=", sep="")
for(i in 1:x){
url <- paste("https://www.ourcommons.ca/Committees/en/", acronym[i], dc[i], "#committeeMembersPanel", sep="")
file <- paste(acronym[i], "_", pn[i], "_", sn[i], "_", dc[i], ".html", sep="")
#download.file(url, file, quiet = TRUE)
}
#######################
# parse HTML function
#######################
parse_HTML <- function(file) {
# get some information from the name of the file
info <- str_split(file, "_|\\.")
info <- unlist(info)
# read html
html <- read_html(file)
# full_name, last_name, first_name
raw <- html %>%
html_nodes(".title,.first-name") %>%
html_text()
x <- which(raw=="Chair")
y <- which(raw=="Vice-Chairs")
z <- which(raw=="Members")
k <- length(raw)
title <- "Initiate"
title[c(x:(y-1))] <- "Chair"
title[c(y:(z-1))] <- "Co-chair"
title[c(z:k)] <- "Member"
first_name <- raw[-c(x,y,z)][c(TRUE,FALSE)]
title <- title[-c(x,y,z)][c(TRUE,FALSE)]
last_name <- html %>%
html_nodes(".last-name") %>%
html_text()
last_name <- last_name[c(TRUE,FALSE)]
full_name <- paste(first_name, last_name, sep=" ") %>%
unique()
# check
if(length(full_name) == 0) {
return(NULL)
}
# return the dataframe
out <- data.frame(committee_acronym = info[2],
parliament_number = info[3],
session_number = info[4],
date_change = info[5],
title = title,
first_name = first_name,
last_name = last_name,
full_name = full_name)
return(out)
}
#####################
# read in data
#####################
setwd('~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Committees/Membership')
# file names
files <- list.files(pattern="*.html", full.names=TRUE, recursive=FALSE)
# parse XML
out <- alply(.data = files, .margins = 1, .fun = parse_HTML, .progress = "text", .inform = TRUE)
# stack data frames
df <- do.call("rbind", out)
###########
# clean
###########
View(df)
#######################
# load libraries
#######################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
lapply(c("stringr", "dplyr", "plyr", "tidyverse", "rvest", "zoo"), pkgTest)
########################
# read in data useful
########################
# set working directory
setwd('~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Committees')
df <- read.csv("canada_committees_date_change.csv")
###################################
# read in useful data in iteration
###################################
# change the date to the one in url
df$date_change <- gsub(",","",df$date_change)
df$dc <- as.Date(df$date_change, format="%B %d %Y")
x <- nrow(df)
# download through iteration
setwd('~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Committees/Membership')
dc <- df$dc
acronym <- df$committee_acronym
pn <- df$parliament_number
sn <- df$session_number
number <- paste("/Members?parl=",pn,"&session=",sn,"&membershipOn=", sep="")
for(i in 1:x){
url <- paste("https://www.ourcommons.ca/Committees/en/", acronym[i], dc[i], "#committeeMembersPanel", sep="")
file <- paste(acronym[i], "_", pn[i], "_", sn[i], "_", dc[i], ".html", sep="")
#download.file(url, file, quiet = TRUE)
}
#######################
# parse HTML function
#######################
parse_HTML <- function(file) {
# get some information from the name of the file
info <- str_split(file, "\\/|_|\\.")
info <- unlist(info)
# read html
html <- read_html(file)
# full_name, last_name, first_name
raw <- html %>%
html_nodes(".title,.first-name") %>%
html_text()
x <- which(raw=="Chair")
y <- which(raw=="Vice-Chairs")
z <- which(raw=="Members")
k <- length(raw)
title <- "Initiate"
title[c(x:(y-1))] <- "Chair"
title[c(y:(z-1))] <- "Co-chair"
title[c(z:k)] <- "Member"
first_name <- raw[-c(x,y,z)][c(TRUE,FALSE)]
title <- title[-c(x,y,z)][c(TRUE,FALSE)]
last_name <- html %>%
html_nodes(".last-name") %>%
html_text()
last_name <- last_name[c(TRUE,FALSE)]
full_name <- paste(first_name, last_name, sep=" ") %>%
unique()
# check
if(length(full_name) == 0) {
return(NULL)
}
# return the dataframe
out <- data.frame(committee_acronym = info[3],
parliament_number = info[4],
session_number = info[5],
date_change = info[6],
title = title,
first_name = first_name,
last_name = last_name,
full_name = full_name)
return(out)
}
#####################
# read in data
#####################
setwd('~/Documents/GitHub/CompLegFall2019/data/canadaTextParsing/Committees/Membership')
# file names
files <- list.files(pattern="*.html", full.names=TRUE, recursive=FALSE)
# parse XML
out <- alply(.data = files, .margins = 1, .fun = parse_HTML, .progress = "text", .inform = TRUE)
# stack data frames
df <- do.call("rbind", out)
###########
# clean
###########
